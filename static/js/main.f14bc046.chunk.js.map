{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["GetCountriesData","useState","country","setCountry","people","setPeople","capital","setCapital","currencies","setCurrencies","alpha3Code","setAlpha3Code","groupStyles","display","alignItems","justifyContent","groupBadgeStyles","backgroundColor","borderRadius","color","fontSize","fontWeight","lineHeight","minWidth","padding","textAlign","options","value","label","className","src","defaultValue","formatGroupLabel","style","length","onChange","e","props","fetch","then","response","json","data","countryElement","console","log","name","population","toLowerCase","code","number","num","toString","pattern","test","replace","thousandComma","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAoFeA,EAhFU,WAAO,IAAD,EACGC,mBAAS,UADZ,mBACpBC,EADoB,KACXC,EADW,OAECF,mBAAS,MAFV,mBAEpBG,EAFoB,KAEZC,EAFY,OAGGJ,mBAAS,UAHZ,mBAGpBK,EAHoB,KAGXC,EAHW,OAISN,mBAAS,IAJlB,mBAIpBO,EAJoB,KAIRC,EAJQ,OAKSR,mBAAS,OALlB,mBAKpBS,EALoB,KAKRC,EALQ,KA4BrBC,EAAc,CAClBC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBAEZC,EAAmB,CACvBC,gBAAiB,UACjBC,aAAc,MACdC,MAAO,UACPN,QAAS,eACTO,SAAU,GACVC,WAAY,SACZC,WAAY,IACZC,SAAU,EACVC,QAAS,2BACTC,UAAW,UAEPC,EAAU,CACd,CAAEC,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,MAAOC,MAAO,QAS3B,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACF,qBAAKA,UAAU,eAAeC,IAAG,wCAAmCpB,EAAnC,UACjC,sBAAKmB,UAAU,gBAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+B3B,IAC/B,cAAC,IAAD,CACE6B,aAAcL,EAAQ,GACtBA,QAASA,EACTM,iBAhBqB,SAAAN,GAAO,OAC9B,sBAAKO,MAAOrB,EAAZ,UACE,+BAAOc,EAAQE,QACf,sBAAMK,MAAOjB,EAAb,SAAgCU,EAAQA,QAAQQ,aAchDC,SAAU,SAACC,GAAD,OArDcC,EAqDUD,EAAET,WApDtCW,MAAM,yCAAD,OAA0CD,IAC9CE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IAAMC,EAAiBD,EAAK,GAC5BE,QAAQC,IAAI,sBAAuBH,EAAK,IACxCvC,GAAW,kBAAIwC,EAAeG,QAC9BzC,GAAU,kBAAIsC,EAAeI,cAC7BpC,GAAc,kBAAIgC,EAAejC,WAAWsC,iBAC5CzC,GAAW,kBAAIoC,EAAerC,WAC9BG,GAAc,kBAAIkC,EAAenC,WAAWyC,WAVrB,IAACZ,KAuD1B,oBAAIR,UAAU,oBACd,oBAAGA,UAAU,eAAb,UAA4B,gDAhEV,SAAUqB,GAG5B,IAFA,IAAIC,EAAMD,EAAOE,WACbC,EAAU,iBACPA,EAAQC,KAAKH,IAChBA,EAAMA,EAAII,QAAQF,EAAS,SAE/B,OAAOF,EA0DqCK,CAAcpD,MAC1D,oBAAGyB,UAAU,eAAb,UAA4B,sDAAiBvB,KAC7C,oBAAGuB,UAAU,eAAb,UAA4B,gDAAgBrB,cCjEnCiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f14bc046.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Select from 'react-select'\nimport './App.css';\n\nconst GetCountriesData = () => {\n    const [country, setCountry] = useState('Taiwan');\n    const [people, setPeople] = useState(23000000);\n    const [capital, setCapital] = useState('Taipei');\n    const [currencies, setCurrencies] = useState([]);\n    const [alpha3Code, setAlpha3Code] = useState('twn');\n\n    var thousandComma = function (number) {\n      var num = number.toString();\n      var pattern = /(-?\\d+)(\\d{3})/;\n      while (pattern.test(num)) {\n          num = num.replace(pattern, \"$1,$2\");\n      }\n      return num;\n  }\n    const fetchCountriesData = (props) => {\n      fetch(`https://restcountries.eu/rest/v2/name/${props}`)\n      .then((response) => response.json())\n      .then((data) => {\n        const countryElement = data[0];\n        console.log('currenciesData === ', data[0]);\n        setCountry(()=>countryElement.name);\n        setPeople(()=>countryElement.population);\n        setAlpha3Code(()=>countryElement.alpha3Code.toLowerCase());\n        setCapital(()=>countryElement.capital);\n        setCurrencies(()=>countryElement.currencies.code);\n        });\n    };\n    const groupStyles = {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    };\n    const groupBadgeStyles = {\n      backgroundColor: '#EBECF0',\n      borderRadius: '2em',\n      color: '#172B4D',\n      display: 'inline-block',\n      fontSize: 12,\n      fontWeight: 'normal',\n      lineHeight: '1',\n      minWidth: 1,\n      padding: '0.16666666666667em 0.5em',\n      textAlign: 'center',\n    };\n    const options = [\n      { value: 'taiwan', label: 'Taiwan' },\n      { value: 'japan', label: 'Japan' },\n      { value: 'canada', label: 'Canada' },\n      { value: 'usa', label: 'USA' }\n    ]\n    const formatGroupLabel = options => (\n      <div style={groupStyles}>\n        <span>{options.label}</span>\n        <span style={groupBadgeStyles}>{options.options.length}</span>\n      </div>\n    );\n     \n  return (\n    <div className=\"App\">\n      <div className=\"country\">\n    <img className=\"country__img\" src={`https://restcountries.eu/data/${alpha3Code}.svg`} />\n    <div className=\"country__data\">\n      <h3 className=\"country__name\">{country}</h3>\n      <Select\n        defaultValue={options[0]}\n        options={options}\n        formatGroupLabel={formatGroupLabel}\n        onChange={(e)=>fetchCountriesData(e.value)}          \n      />\n      <h4 className=\"country__region\"></h4>\n      <p className=\"country__row\"><span>üë´</span>{thousandComma(people)}</p>\n      <p className=\"country__row\"><span>üó£Ô∏è</span>{capital}</p>\n      <p className=\"country__row\"><span>üí∞</span>{currencies}</p>\n    </div>\n  </div>\n    </div>\n  );}\n\n\nexport default GetCountriesData;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}