{"version":3,"sources":["countries.jsx","App.js","reportWebVitals.js","index.js"],"names":["value","label","GetCountriesData","useState","people","setPeople","capital","setCapital","currencies","setCurrencies","timezones","setTimezones","alpha3Code","setAlpha3Code","peopleValue","setPeopleValue","capitalValue","setCapitalValue","currenciesValue","setCurrenciesValue","timezonesValue","setTimezonesValue","groupStyles","display","alignItems","justifyContent","groupBadgeStyles","backgroundColor","borderRadius","color","fontSize","fontWeight","lineHeight","minWidth","padding","textAlign","className","src","defaultValue","countries","options","formatGroupLabel","style","length","onChange","e","props","fetch","then","res","json","data","countryElement","console","log","population","toLowerCase","code","number","num","toString","pattern","test","replace","thousandComma","type","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed0e1fa0.chunk.js","sourcesContent":["export default [\n    { value: 'afghanistan', label: 'Afghanistan' },\n    { value: 'aland Islands', label: 'Aland Islands' },\n    { value: 'albania', label: 'Albania' },\n    { value: 'algeria', label: 'Algeria' },\n    { value: 'american Samoa', label: 'American Samoa' },\n    { value: 'andorra', label: 'Andorra' },\n    { value: 'angola', label: 'Angola' },\n    { value: 'anguilla', label: 'Anguilla' },\n    { value: 'antarctica', label: 'Antarctica' },\n    { value: 'antigua And Barbuda', label: 'Antigua And Barbuda' },\n    { value: 'argentina', label: 'Argentina' },\n    { value: 'armenia', label: 'Armenia' },\n    { value: 'aruba', label: 'Aruba' },\n    { value: 'australia', label: 'Australia' },\n    { value: 'austria', label: 'Austria' },\n    { value: 'azerbaijan', label: 'Azerbaijan' },\n    { value: 'bahamas', label: 'Bahamas' },\n    { value: 'bahrain', label: 'Bahrain' },\n    { value: 'bangladesh', label: 'Bangladesh' },\n    { value: 'barbados', label: 'Barbados' },\n    { value: 'belarus', label: 'Belarus' },\n    { value: 'belgium', label: 'Belgium' },\n    { value: 'belize', label: 'Belize' },\n    { value: 'benin', label: 'Benin' },\n    { value: 'bermuda', label: 'Bermuda' },\n    { value: 'bhutan', label: 'Bhutan' },\n    { value: 'bolivia', label: 'Bolivia' },\n    { value: 'bosnia And Herzegovina', label: 'Bosnia And Herzegovina' },\n    { value: 'botswana', label: 'Botswana' },\n    { value: 'bouvet Island', label: 'Bouvet Island' },\n    { value: 'brazil', label: 'Brazil' },\n    { value: 'british Indian Ocean Territory', label: 'British Indian Ocean Territory' },\n    { value: 'brunei Darussalam', label: 'Brunei Darussalam' },\n    { value: 'bulgaria', label: 'Bulgaria' },\n    { value: 'burkina Faso', label: 'Burkina Faso' },\n    { value: 'burundi', label: 'Burundi' },\n    { value: 'cambodia', label: 'Cambodia' },\n    { value: 'cameroon', label: 'Cameroon' },\n    { value: 'canada', label: 'Canada' },\n    { value: 'cape Verde', label: 'Cape Verde' },\n    { value: 'cayman Islands', label: 'Cayman Islands' },\n    { value: 'central African Republic', label: 'Central African Republic' },\n    { value: 'chad', label: 'Chad' },\n    { value: 'chile', label: 'Chile' },\n    { value: 'china', label: 'China' },\n    { value: 'christmas Island', label: 'Christmas Island' },\n    { value: 'cocos (Keeling) Islands', label: 'Cocos (Keeling) Islands'},\n    { value: 'colombia', label: 'Colombia' },\n    { value: 'comoros', label: 'Comoros' },\n    { value: 'congo', label: 'Congo' },\n    { value: 'congo, Democratic Republic', label: 'Congo, Democratic Republic' },\n    { value: 'cook Islands', label: 'Cook Islands'},\n    { value: 'costa Rica', label: 'Costa Rica' },\n    { value: 'cote D\\'Ivoire', label: 'Cote D\\'Ivoire' },\n    { value: 'croatia', label: 'Croatia' },\n    { value: 'cuba', label: 'Cuba' },\n    { value: 'cyprus', label: 'Cyprus' },\n\n    { value: 'Czech Republic', label: 'Czech Republic' },\n    { value: 'Denmark', label: 'Denmark' },\n    { value: 'Djibouti', label: 'Djibouti' },\n    { value: 'Dominica', label: 'Dominica' },\n    { value: 'Dominican Republic', label: 'Dominican Republic' },\n    { value: 'Ecuador', label: 'Ecuador' },\n    { value: 'Egypt', label: 'Egypt' },\n    { value: 'El Salvador', label: 'El Salvador' },\n    { value: 'Equatorial Guinea', label: 'Equatorial Guinea' },\n    { value: 'Eritrea', label: 'Eritrea' },\n    { value: 'Estonia', label: 'Estonia' },\n    { value: 'Ethiopia', label: 'Ethiopia' },\n    { value: 'Falkland Islands (Malvinas)', label: 'Falkland Islands (Malvinas)' },\n    { value: 'Faroe Islands', label: 'Faroe Islands' },\n    { value: 'Fiji', label: 'Fiji' },\n    { value: 'Finland', label: 'Finland' },\n    { value: 'France', label: 'France' },\n    { value: 'French Guiana', label: 'French Guiana' },\n    { value: 'French Polynesia', label: 'French Polynesia' },\n    { value: 'French Southern Territories', label: 'French Southern Territories' },\n    { value: 'Gabon', label: 'Gabon' },\n    { value: 'Gambia', label: 'Gambia' },\n    { value: 'Georgia', label: 'Georgia' },\n    { value: 'Germany', label: 'Germany' },\n    { value: 'Ghana', label: 'Ghana' },\n    { value: 'Gibraltar', label: 'Gibraltar' },\n    { value: 'Greece', label: 'Greece' },\n\n    { value: 'greenland', label: 'Greenland' },\n    { value: 'grenada', label: 'Grenada' },\n    { value: 'guadeloupe', label: 'Guadeloupe' },\n    { value: 'guam', label: 'Guam' },\n    { value: 'guatemala', label: 'Guatemala' },\n    { value: 'guernsey', label: 'Guernsey' },\n    { value: 'guinea', label: 'Guinea' },\n    { value: 'guinea-Bissau', label: 'Guinea-Bissau' },\n    { value: 'guyana', label: 'Guyana' },\n    { value: 'haiti', label: 'Haiti' },\n\n    { value: 'Heard Island & Mcdonald Islands', label: 'Heard Island & Mcdonald Islands' },\n    { value: 'Holy See (Vatican City State)', label: 'Holy See (Vatican City State)' },\n    { value: 'Honduras', label: 'Honduras' },\n    { value: 'Hong Kong', label: 'Hong Kong' },\n    { value: 'Hungary', label: 'Hungary' },\n    { value: 'Iceland', label: 'Iceland' },\n    { value: 'India', label: 'India' },\n    { value: 'Indonesia', label: 'Indonesia' },\n    { value: 'Iran, Islamic Republic Of', label: 'Iran, Islamic Republic Of' },\n    { value: 'Iraq', label: 'Iraq' },\n    { value: 'Ireland', label: 'Ireland' },\n    { value: 'Isle Of Man', label: 'Isle Of Man' },\n    { value: 'Israel', label: 'Israel' },\n    { value: 'Italy', label: 'Italy' },\n    { value: 'Jamaica', label: 'Jamaica' },\n    { value: 'Japan', label: 'Japan' },\n    { value: 'Jersey', label: 'Jersey' },\n    { value: 'Jordan', label: 'Jordan' },\n    { value: 'Kazakhstan', label: 'Kazakhstan' },\n    { value: 'Kenya', label: 'Kenya' },\n    { value: 'Kiribati', label: 'Kiribati' },\n    { value: 'Korea', label: 'Korea' },\n    { value: 'Kuwait', label: 'Kuwait' },\n    { value: 'Kyrgyzstan', label: 'Kyrgyzstan' },\n    { value: 'Lao People\\'s Democratic Republic', label: 'Lao People\\'s Democratic Republic' },\n    { value: 'Latvia', label: 'Latvia' },\n    { value: 'Lebanon', label: 'Lebanon' },\n    { value: 'Lesotho', label: 'Lesotho' },\n    { value: 'Liberia', label: 'Liberia' },\n    { value: 'Libyan Arab Jamahiriya', label: 'Libyan Arab Jamahiriya' },\n    \n    { value: 'liechtenstein', label: 'Liechtenstein' },\n    { value: 'lithuania', label: 'Lithuania' },\n    { value: 'luxembourg', label: 'Luxembourg' },\n    { value: 'macao', label: 'Macao' },\n    { value: 'macedonia', label: 'Macedonia' },\n    { value: 'madagascar', label: 'Madagascar' },\n    { value: 'malawi', label: 'Malawi' },\n    { value: 'malaysia', label: 'Malaysia' },\n    { value: 'maldives', label: 'Maldives' },\n    { value: 'mali', label: 'Mali' },\n    { value: 'malta', label: 'Malta' },\n    { value: 'marshall Islands', label: 'Marshall Islands' },\n    { value: 'martinique', label: 'Martinique' },\n    { value: 'mauritania', label: 'Mauritania' },\n    { value: 'mauritius', label: 'Mauritius' },\n    { value: 'mayotte', label: 'Mayotte' },\n    { value: 'mexico', label: 'Mexico' },\n    { value: 'micronesia, Federated States Of', label: 'Micronesia, Federated States Of' },\n    { value: 'moldova', label: 'Moldova' },\n    { value: 'monaco', label: 'Monaco' },\n    { value: 'mongolia', label: 'Mongolia' },\n    { value: 'montenegro', label: 'Montenegro' },\n    { value: 'montserrat', label: 'Montserrat' },\n    { value: 'morocco', label: 'Morocco' },\n    { value: 'mozambique', label: 'Mozambique' },\n    { value: 'myanmar', label: 'Myanmar' },\n\n    { value: 'Namibia', label: 'Namibia' },\n    { value: 'Nauru', label: 'Nauru' },\n    { value: 'Nepal', label: 'Nepal' },\n    { value: 'Netherlands', label: 'Netherlands' },\n    { value: 'Netherlands Antilles', label: 'Netherlands Antilles' },\n    { value: 'New Caledonia', label: 'New Caledonia' },\n    { value: 'New Zealand', label: 'New Zealand' },\n    { value: 'Nicaragua', label: 'Nicaragua' },\n    { value: 'Niger', label: 'Niger' },\n    { value: 'Nigeria', label: 'Nigeria' },\n    { value: 'Niue', label: 'Niue' },\n    { value: 'Norfolk Island', label: 'Norfolk Island' },\n    { value: 'Northern Mariana Islands', label: 'Northern Mariana Islands' },\n    { value: 'Norway', label: 'Norway' },\n    { value: 'Oman', label: 'Oman' },\n    { value: 'Pakistan', label: 'Pakistan' },\n    { value: 'Palau', label: 'Palau' },\n    { value: 'Palestinian Territory, Occupied', label: 'Palestinian Territory, Occupied' },\n    { value: 'Panama', label: 'Panama' },\n    { value: 'Papua New Guinea', label: 'Papua New Guinea' },\n    { value: 'Paraguay', label: 'Paraguay' },\n    { value: 'Peru', label: 'Peru' },\n    { value: 'Philippines', label: 'Philippines' },\n    { value: 'Pitcairn', label: 'Pitcairn' },\n    { value: 'Poland', label: 'Poland' },\n    { value: 'Portugal', label: 'Portugal' },\n    { value: 'Puerto Rico', label: 'Puerto Rico' },\n    { value: 'Qatar', label: 'Qatar' },\n    { value: 'Reunion', label: 'Reunion' },\n    { value: 'Romania', label: 'Romania' },\n    { value: 'Russian Federation', label: 'Russian Federation' },\n    { value: 'Rwanda', label: 'Rwanda' },\n    { value: 'Saint Barthelemy', label: 'Saint Barthelemy' },\n    { value: 'Saint Helena', label: 'Saint Helena' },\n    { value: 'Saint Kitts And Nevis', label: 'Saint Kitts And Nevis' },\n    { value: 'Portugal', label: 'Portugal' },\n    { value: 'Puerto Rico', label: 'Puerto Rico' },\n    { value: 'Qatar', label: 'Qatar' },\n    { value: 'Reunion', label: 'Reunion' },\n    { value: 'Romania', label: 'Romania' },\n    { value: 'Russian Federation', label: 'Russian Federation' },\n    { value: 'Rwanda', label: 'Rwanda' },\n    { value: 'Saint Barthelemy', label: 'Saint Barthelemy' },\n    { value: 'Saint Helena', label: 'Saint Helena' },\n    { value: 'Saint Kitts And Nevis', label: 'Saint Kitts And Nevis' },\n    { value: 'Seychelles', label: 'Seychelles' },\n    { value: 'Sierra Leone', label: 'Sierra Leone' },\n    { value: 'Singapore', label: 'Singapore' },\n    { value: 'Slovakia', label: 'Slovakia' },\n    { value: 'Slovenia', label: 'Slovenia' },\n    { value: 'Solomon Islands', label: 'Solomon Islands' },\n    { value: 'Somalia', label: 'Somalia' },\n    { value: 'South Africa', label: 'South Africa' },\n    { value: 'South Georgia And Sandwich Isl.', label: 'South Georgia And Sandwich Isl.' },\n    { value: 'Spain', label: 'Spain' },\n    { value: 'Sri Lanka', label: 'Sri Lanka' },\n    { value: 'Sudan', label: 'Sudan' },\n    { value: 'Suriname', label: 'Suriname' },\n    { value: 'Svalbard And Jan Mayen', label: 'Svalbard And Jan Mayen' },\n    { value: 'Swaziland', label: 'Swaziland' },\n    { value: 'Sweden', label: 'Sweden' },\n    { value: 'Switzerland', label: 'Switzerland' },\n    { value: 'Syrian Arab Republic', label: 'Syrian Arab Republic' },\n    { value: 'Taiwan', label: 'Taiwan' },\n    { value: 'Tajikistan', label: 'Tajikistan' },\n    { value: 'Tanzania', label: 'Tanzania' },\n    { value: 'Thailand', label: 'Thailand' },\n    { value: 'Timor-Leste', label: 'Timor-Leste' },\n    { value: 'Togo', label: 'Togo' },\n    { value: 'Tokelau', label: 'Tokelau' },\n    { value: 'Tonga', label: 'Tonga' },\n    { value: 'Trinidad And Tobago', label: 'Trinidad And Tobago' },\n    { value: 'Tunisia', label: 'Tunisia' },\n    { value: 'Turkey', label: 'Turkey' },\n    { value: 'Turkmenistan', label: 'Turkmenistan' },\n    { value: 'Turks And Caicos Islands', label: 'Turks And Caicos Islands' },\n    { value: 'Tuvalu', label: 'Tuvalu' },\n    { value: 'Uganda', label: 'Uganda' },\n    { value: 'Ukraine', label: 'Ukraine' },\n    { value: 'United Arab Emirates', label: 'United Arab Emirates' },\n    { value: 'United Kingdom', label: 'United Kingdom' },\n    { value: 'United States', label: 'United States' },\n    { value: 'United States Outlying Islands', label: 'United States Outlying Islands' },\n    { value: 'Uruguay', label: 'Uruguay' },\n    { value: 'Uzbekistan', label: 'Uzbekistan' },\n    { value: 'Vanuatu', label: 'Vanuatu' },\n    { value: 'Venezuela', label: 'Venezuela' },\n    { value: 'Viet Nam', label: 'Viet Nam' },\n    { value: 'Virgin Islands, British', label: 'Virgin Islands, British' },\n    { value: 'Virgin Islands, U.S.', label: 'Virgin Islands, U.S.' },\n    { value: 'Wallis And Futuna', label: 'Wallis And Futuna' },\n    { value: 'Western Sahara', label: 'Western Sahara' },\n    { value: 'Yemen', label: 'Yemen' },\n    { value: 'Zambia', label: 'Zambia' },\n    { value: 'Zimbabwe', label: 'Zimbabwe' },\n  ]\n","import React, {useState} from 'react';\nimport Select from 'react-select'\nimport './App.css';\nimport countries from './countries';\n\nconst GetCountriesData = () => {\n    const [people, setPeople] = useState(23503349);\n    const [language, setLanguage] = useState(['中文 (Zhōngwén)']);\n    const [capital, setCapital] = useState('Taipei');\n    const [currencies, setCurrencies] = useState(['TWD']);\n    const [timezones, setTimezones] = useState(['UTC+08:00']);\n    const [alpha3Code, setAlpha3Code] = useState('twn');\n    const [peopleValue, setPeopleValue] = useState(true);\n    const [languageValue, setLanguageValue] = useState(true);\n    const [capitalValue, setCapitalValue] = useState(true);\n    const [currenciesValue, setCurrenciesValue] = useState(true);\n    const [timezonesValue, setTimezonesValue] = useState(true);\n\n    var thousandComma = function (number) {\n      var num = number.toString();\n      var pattern = /(-?\\d+)(\\d{3})/;\n      while (pattern.test(num)) {\n          num = num.replace(pattern, \"$1,$2\");\n      }\n      return num;\n    }\n    const fetchCountriesData = (props) => {\n      fetch(`https://restcountries.eu/rest/v2/name/${props}`)\n      .then((res) => res.json())\n      .then((data) => {\n        const countryElement = data[0];\n        console.log('currenciesData === ', data[0]);\n        setPeople(()=>countryElement.population);\n        //setLanguage(()=>countryElement.language[0].name);\n        setAlpha3Code(()=>countryElement.alpha3Code.toLowerCase());\n        setCapital(()=>countryElement.capital);\n        setTimezones(()=>countryElement.timezones[0]);\n        setCurrencies(()=>countryElement.currencies[0].code);\n        });\n    };\n    const groupStyles = {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    };\n    const groupBadgeStyles = {\n      backgroundColor: '#EBECF0',\n      borderRadius: '2em',\n      color: '#172B4D',\n      display: 'inline-block',\n      fontSize: 12,\n      fontWeight: 'normal',\n      lineHeight: '1',\n      minWidth: 1,\n      padding: '0.16666666666667em 0.5em',\n      textAlign: 'center',\n    };\n    const formatGroupLabel = options => (\n      <div style={groupStyles}>\n        <span>{options.label}</span>\n        <span style={groupBadgeStyles}>{options.options.length}</span>\n      </div>\n    );\n  return (\n    <div className=\"app\">\n      <div className=\"country\">\n        <img className=\"country__img\" src={`https://restcountries.eu/data/${alpha3Code}.svg`} />\n          <div className=\"country__data\">\n            <Select\n              defaultValue={countries[213]}\n              options={countries}\n              formatGroupLabel={formatGroupLabel}\n              onChange={(e)=>fetchCountriesData(e.value)}         \n            />\n            <h4 className=\"country__region\"></h4>\n            {peopleValue? <></>:<p className=\"country__row\"><span>👫</span>{thousandComma(people)}</p>} \n            {/* {languageValue? <></>:<p className=\"country__row\"><span>🗣</span>{language}</p>} */}\n            {capitalValue? <></>:<p className=\"country__row\"><span>🏠</span>{capital}</p>}\n            {currenciesValue? <></>:<p className=\"country__row\"><span>💰</span>{currencies}</p>}\n            {timezonesValue? <></>:<p className=\"country__row\"><span>✈️</span>{timezones}</p>}\n          </div>\n      </div>\n      <div className=\"container\">\n          <div type=\"button\" className=\"optionBtn\" onClick={() => setPeopleValue(!peopleValue)}>👫People</div>\n          {/* <div type=\"button\" className=\"optionBtn\" onClick={() => setLanguageValue(!languageValue)}>🗣Language</div> */}\n          <div type=\"button\" className=\"optionBtn\" onClick={() => setCapitalValue(!capitalValue)}>🏠Capital</div>\n          <div type=\"button\" className=\"optionBtn\" onClick={() => setCurrenciesValue(!currenciesValue)}>💰Currencies</div>\n          <div type=\"button\" className=\"optionBtn\" onClick={() => setTimezonesValue(!timezonesValue)}>✈️Timezones</div>\n      </div>\n    </div>\n  );}\n\n\nexport default GetCountriesData;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}